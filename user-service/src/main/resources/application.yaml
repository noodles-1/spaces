server:
  port: 8081

spring:
  application:
    name: USER-SERVICE
  datasource:
    url: jdbc:${USER_SERVICE_DB_URL}
    username: ${USER_SERVICE_DB_USERNAME}
    password: ${USER_SERVICE_DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
  servlet:
    multipart:
      max-file-size: 1MB
      max-request-size: 10MB
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_ADDRESS}
    producer:
      retries: 0
    template:
      default-topic: spaces-log-topic

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_SERVICE_URL}
  instance:
    hostname: ${EUREKA_HOSTNAME}

security:
  jwt:
    secret-key: ${SPACES_JWT_SECRET_KEY}
    access-token-expiration: 1_800_000  # 15 minutes
    refresh-token-expiration: 604_800_000  # 7 days

resilience4j:
  ratelimiter:
    instances:
      auth-controller:
        limit-for-period: 5
        limit-refresh-period: 60s
        timeout-duration: 10s
        register-health-indicator: true

aws:
  credentials:
    access-key: ${SPACES_S3_ACCESS_KEY}
    secret-key: ${SPACES_S3_SECRET_KEY}
  bucket-name: ${SPACES_S3_BUCKET_NAME}
  region: ${SPACES_S3_REGION}
  endpoint: ${SPACES_S3_ENDPOINT}
  cdn-endpoint: ${SPACES_S3_CDN_ENDPOINT}

auth:
  providers:
    github:
      client-id: ${SPACES_GITHUB_CLIENT_ID}
      client-secret: ${SPACES_GITHUB_CLIENT_SECRET}
    discord:
      client-id: ${SPACES_DISCORD_CLIENT_ID}
      client-secret: ${SPACES_DISCORD_CLIENT_SECRET}